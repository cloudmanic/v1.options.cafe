version: '2.1'

services:

  # App
  app:
           
    hostname: ${VIRTUAL_HOST}

    container_name: ${VIRTUAL_HOST}
    
    ports:
      - "127.0.0.1:7080:7080"     
           
    build:
      context: ./build
      dockerfile: Dockerfile-backend
      args:
        P_UID: ${P_UID}
        P_GID: ${P_GID}       
    
    image: ${VIRTUAL_HOST}/golang:1.8.1-alpine           

    restart: ${RESTART}
    
    environment:   
      VIRTUAL_HOST: ${VIRTUAL_HOST}

    env_file:
      - .env                   
          
    volumes:
      - ../:/work:rw
      - ../../frontend/dist:/frontend:rw      
      - ../cache:/cache:rw      
      - ../../:/go/src/github.com/app.options.cafe:cached,rw       
      - ${GO_PATH}/src/golang.org:/go/src/golang.org:cached,rw
      - ${GO_PATH}/src/github.com:/go/src/github.com:cached,rw
            
    networks:
      - shared 

  # Cron
  cron:
           
    hostname: ${VIRTUAL_HOST}

    container_name: ${VIRTUAL_HOST}
              
    build:
      context: ./build
      dockerfile: Dockerfile-cron
      args:
        P_UID: ${P_UID}
        P_GID: ${P_GID}       
    
    image: cron.${VIRTUAL_HOST}/golang:1.8.1-alpine           

    restart: ${RESTART}
              
    volumes:
      - ../:/work:rw
      - ../cache:/cache:rw      
      - ../../:/go/src/app.options.cafe:cached,rw       
      - ${GO_PATH}/src/golang.org:/go/src/golang.org:cached,rw
      - ${GO_PATH}/src/github.com:/go/src/github.com:cached,rw

    env_file:
      - .env

    networks:
      - shared 

  
networks:
  shared:
    external:
      name: shared 